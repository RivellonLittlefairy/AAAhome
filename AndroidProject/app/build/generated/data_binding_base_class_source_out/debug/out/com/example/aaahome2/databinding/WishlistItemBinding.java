// Generated by view binder compiler. Do not edit!
package com.example.aaahome2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aaahome2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WishlistItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView gameName;

  @NonNull
  public final TextView percent;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView text3;

  @NonNull
  public final ImageView wishImg;

  @NonNull
  public final EditText wishPrice;

  private WishlistItemBinding(@NonNull ConstraintLayout rootView, @NonNull TextView gameName,
      @NonNull TextView percent, @NonNull TextView price, @NonNull TextView text3,
      @NonNull ImageView wishImg, @NonNull EditText wishPrice) {
    this.rootView = rootView;
    this.gameName = gameName;
    this.percent = percent;
    this.price = price;
    this.text3 = text3;
    this.wishImg = wishImg;
    this.wishPrice = wishPrice;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WishlistItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WishlistItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.wishlist_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WishlistItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.game_name;
      TextView gameName = ViewBindings.findChildViewById(rootView, id);
      if (gameName == null) {
        break missingId;
      }

      id = R.id.percent;
      TextView percent = ViewBindings.findChildViewById(rootView, id);
      if (percent == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      id = R.id.text3;
      TextView text3 = ViewBindings.findChildViewById(rootView, id);
      if (text3 == null) {
        break missingId;
      }

      id = R.id.wish_img;
      ImageView wishImg = ViewBindings.findChildViewById(rootView, id);
      if (wishImg == null) {
        break missingId;
      }

      id = R.id.wishPrice;
      EditText wishPrice = ViewBindings.findChildViewById(rootView, id);
      if (wishPrice == null) {
        break missingId;
      }

      return new WishlistItemBinding((ConstraintLayout) rootView, gameName, percent, price, text3,
          wishImg, wishPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
